1. Do we need to have storage classes corresponding to each test_<integration name>.py file we have?
2. We currently have the following integrations done:
    - [x] Sheets
    - [x] Gmail
    - [ ] LinkedIn
    - [ ] Handshake
    - [ ] Slack
    - [ ] Discord
    - [ ] Outlook
    Do we need to create a storage class for each of these?
    If so, what should the name of the class be?
    What should the attributes and methods of the class be?
    What should the __init__ method of the class be?
    What should the __str__ method of the class be?
    What should the __repr__ method of the class be?
3. Please add in pre-commit hooks and open ai to requirements.txt
4. `chmod +x scripts/deploy_to_ec2.sh` needs to be documented properly.
5. `chmod +x scripts/ec2_security_setup.sh` ditto #4
6. Tell me more about how this github actions workflow is configured for our CI/CD pipeline.
7. Where are black and flake8 being run from or used in this repo? What do they do and should we inrporate them?
8. You mentioned that poetry inside of docker setup is better for Python dependency management. Why?
9. Can we reincorporate poetry into this project in the Docker setup?
10. I like the following:
    This modernized approach will give you:
    Consistent environments across development, testing, and production
    Better dependency management with clear versioning
    Automated testing and quality checks
    Simpler onboarding for new contributors. Currently, we only have development and production environments. Where/how do we add a set stage too?
11. ARG ENVIRONMENT=development
RUN if [ "$ENVIRONMENT" = "production" ]; then \
        uv pip install --system . ; \
    else \
        uv pip install --system ".[dev]" ; \
    fi
    I want to know how this Dockerfile will need to be changed if we put this into deployment, because it appears to always set the environment variable to development.
12. Add other requirements for the project in the Requirements section of the README.md
13. Move `src/config/environment.py` to `config/`.
14. Why do I have to activate ven when running setup.sh? I thought it would handle everything, inclucding venv. Shouldn't everything be in a Docker contrainer for development anyways?
15. There's an empty .gitkeep file. We need to determine what all needs to be added to this and what its purpose is.
